import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;


import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class addCatServlet
 */
@WebServlet("/registerservlet")
public class registerservlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public registerservlet() {
		super();
		// TODO Auto-generated constructor stub
	}

	static final String DB_URL = "jdbc:mysql://localhost:3306/mydb";
	static final String USER = "root";
	static final String PASS = "";

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		// JDBC driver name and database URL

		final String DB_URL="jdbc:mysql://localhost:3306/mydb";

		//  Database credentials
		final String USER = "root";
		final String PASS = "";

		// Set response content type
		response.setContentType("text/html");

		PrintWriter out = response.getWriter();

		try{
			// Register JDBC driver
			Class.forName("com.mysql.jdbc.Driver");

			// Open a connection
			Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
			
			
			//parent values
			String salutation = request.getParameter("salutation");
			String sname = request.getParameter("sname");
			String gname = request.getParameter("gname");
			String gender = request.getParameter("gender");
			String country = request.getParameter("country");
			String contact_number = request.getParameter("contact_number");
			String address = request.getParameter("address");
			String postal_code = request.getParameter("postal_code");
			String email = request.getParameter("email");
			String password = request.getParameter("password");

			//child values
			String dob = request.getParameter("dob");
			String relationship = request.getParameter("relationship");
			String salutation1 = request.getParameter("salutation1");
			String sname1 = request.getParameter("sname1");
			String gname1 = request.getParameter("gname1");
			String gender1 = request.getParameter("gender1");
			String country1 = request.getParameter("country1");
			String contact_number1 = request.getParameter("contact_number1");
			String address1 = request.getParameter("address1");
			String postal_code1 = request.getParameter("postal_code1");
			String email1 = request.getParameter("email1");
			String password1 = request.getParameter("password1");

			// Execute SQL query
			final  Statement stmtparenttable = conn.createStatement();
			final  Statement stmtparentusertable = conn.createStatement();
			final  Statement stmtclienttable = conn.createStatement();
			final  Statement stmtclientusertable = conn.createStatement();
	
			//Date format (USER table - parent)
			java.util.Date dt = new java.util.Date();
			java.text.SimpleDateFormat sdf =  new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			String currentTime = sdf.format(dt);
			
			//String for the different tables
			String sqlparenttable;
			String sqlparentusertable;
			String sqlclienttable;
			String sqlclientusertable;

			//query for PARENT table
			sqlparenttable = "INSERT INTO `parent`() VALUES ()";
			//execute user table for PARENT
			int rs1 = stmtparenttable.executeUpdate(sqlparenttable,Statement.RETURN_GENERATED_KEYS);
			
			
			//generate key for parent and user relationship
			ResultSet parentid = null;
			parentid = stmtparenttable.getGeneratedKeys();
			
			while (parentid.next()) {
				int key = parentid.getInt(1);
				
				sqlparentusertable = "INSERT INTO `user`(`parent_id`,`email`, `password`, `surname`, `given_name`, `mobile`, `role`, `create_update_datetime`,`salutation`, `address`, `userStatus_id`) VALUES ('"+key+"','"+email+"','"+password+"','"+sname+"','"+gname+"','"+contact_number+"','parent','"+currentTime+"','"+salutation+"','"+address+"','2') " ;
				
				sqlclienttable = "INSERT INTO `client`(`parent_id`, `client_dob`, `relationship_to_child`) VALUES ('"+key+"','"+dob+"','"+relationship+"')";
				
				int i = stmtparentusertable.executeUpdate(sqlparentusertable);
				
				int sqlclient = stmtclienttable.executeUpdate(sqlclienttable, Statement.RETURN_GENERATED_KEYS);
				
				
				ResultSet clientid = null;
				clientid = stmtclienttable.getGeneratedKeys();
				
				while (clientid.next()) {
					int keyforclient = clientid.getInt(1);
				
				sqlclientusertable = "INSERT INTO `user`(`client_id`,`email`, `password`, `surname`, `given_name`, `mobile`, `role`, `create_update_datetime`,`salutation`, `address`, `userStatus_id`) VALUES ('"+keyforclient+"','"+email1+"','"+password1+"','"+sname1+"','"+gname1+"','"+contact_number1+"','child','"+currentTime+"','"+salutation1+"','"+address1+"','1') " ;
				
				int usertable = stmtclientusertable.executeUpdate(sqlclientusertable);
				
					// validate login to remember the row
					if (i == 1) {
						out.println("success");
						// response.sendRedirect("doRegister.html");
					} else {
						out.println("failed");
						// response.sendRedirect("Register.html");
					}
				} // end of while loop
				clientid.close();
			}

			parentid.close();

		} catch (SQLException se) {
			// Handle errors for JDBC
			se.printStackTrace();
		} catch (Exception e) {
			// Handle errors for Class.forName
			e.printStackTrace();
		}
	}
}
